// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Calendar 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ date like Date 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ date like object 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ defaultViewMode month_list 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c9:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  left: 16px;
  color: #808185;
  cursor: pointer;
}

.c2:hover {
  color: #2B2D33;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c5:active {
  top: 1px;
}

.c5:hover {
  color: #00809C;
}

.c6 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c6:not(:last-of-type) {
  margin-right: 8px;
}

.c6 > svg {
  display: block;
}

.c7 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c8 {
  width: 74px;
  height: 56px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  cursor: pointer;
  border-radius: 8px;
}

.c8:hover {
  background-color: #F4F4F4;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_0"
  >
    <div
      class="c2"
      data-marker="Header.content.BackButton_0"
    >
      <svg
        data-marker="Header.content.LeftArrow_0"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="LeftArrow.defs"
        />
        <path
          d="M21 11H6.414L13 4.414V3h-1.414l-9 9 9 9H13v-1.414L6.414 13H21z"
          data-marker="LeftArrow.path"
        />
      </svg>
    </div>
    <div
      class="c3"
      data-marker="Header.content.NavigationButton_1"
    >
      <svg
        data-marker="Header.content.Left_0"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.HeaderTitle_0"
    >
      <button
        class="c5"
        data-marker="Header.content.Button"
        type="button"
      >
        <span
          class="c6"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c3"
      data-marker="Header.content.NavigationButton_2"
    >
      <svg
        data-marker="Header.content.Right_0"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_0"
  >
    <div
      class="c7"
      data-marker="Body.content.Box_0"
    >
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Янв.
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Февр.
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Март
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Апр.
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Май
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Июнь
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Июль
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Авг.
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Сент.
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Окт.
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Нояб.
      </div>
      <div
        class="c8"
        data-marker="months.CalendarCell"
      >
        Дек.
      </div>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ defaultViewMode year_list 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c7:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  left: 16px;
  color: #808185;
  cursor: pointer;
}

.c2:hover {
  color: #2B2D33;
}

.c5 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c6 {
  width: 74px;
  height: 56px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  cursor: pointer;
  border-radius: 8px;
}

.c6:hover {
  background-color: #F4F4F4;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box"
  >
    <div
      class="c2"
      data-marker="Header.content.BackButton"
    >
      <svg
        data-marker="Header.content.LeftArrow"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="LeftArrow.defs"
        />
        <path
          d="M21 11H6.414L13 4.414V3h-1.414l-9 9 9 9H13v-1.414L6.414 13H21z"
          data-marker="LeftArrow.path"
        />
      </svg>
    </div>
    <div
      class="c3"
      data-marker="Header.content.NavigationButton"
    >
      <svg
        data-marker="Header.content.Left"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.HeaderTitle"
    >
      2016-2027
    </div>
    <div
      class="c3"
      data-marker="Header.content.NavigationButton_0"
    >
      <svg
        data-marker="Header.content.Right"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div"
  >
    <div
      class="c5"
      data-marker="Body.content.Box"
    >
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2016
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2017
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2018
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2019
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2020
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2021
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2022
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2023
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2024
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2025
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2026
      </div>
      <div
        class="c6"
        data-marker="Body.content.CalendarCell"
      >
        2027
      </div>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ disabledDates custom 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ disabledDates weekends 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ eventDates 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ minDate and maxDate 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ onChange 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c17 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_12"
  date={2019-12-31T21:00:00.000Z}
  defaultViewMode="month"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          null,
          Object {
            "date": 2020-01-05T21:00:00.000Z,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ranged={false}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c17 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c18"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          date={2020-01-05T21:00:00.000Z}
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={false}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthSingleDays
                    data-marker="Body.content.MonthSingleDays"
                    date={2020-01-05T21:00:00.000Z}
                    displayedDate={2019-12-31T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      type={
                        Array [
                          "today",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "today",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "today",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onClick={[Function]}
                      type={
                        Array [
                          "active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "active",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthSingleDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c18",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c18"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange for MonthRangeDays 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c18 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c18 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_11"
  defaultViewMode="month"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          null,
          Object {
            "dateEnd": 2019-12-31T21:00:00.000Z,
            "dateStart": 2019-12-31T21:00:00.000Z,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ranged={true}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c19 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c16 {
  position: absolute;
  height: 100%;
  width: 50%;
  top: 0;
  right: 0;
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today,active"
                >
                  <div
                    class="c16"
                    data-marker="monthDays.RangeSelectionStart"
                  />
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c18"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={true}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthRangeDays
                    data-marker="Body.content.MonthRangeDays"
                    date={
                      Object {
                        "end": undefined,
                        "start": undefined,
                      }
                    }
                    displayedDate={2019-12-31T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "today",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "today",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "today",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthRangeDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c17",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c17"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange for MonthSingleDays 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c18 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c18 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_10"
  defaultViewMode="month"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          null,
          Object {
            "date": 2019-12-31T21:00:00.000Z,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ranged={false}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c18 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c18 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today,active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c17"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={false}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthSingleDays
                    data-marker="Body.content.MonthSingleDays"
                    displayedDate={2019-12-31T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      type={
                        Array [
                          "today",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "today",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "today",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthSingleDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c17",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c17"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange on disabled day 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c19 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_13"
  date={2019-12-31T21:00:00.000Z}
  defaultViewMode="month"
  disabledDates={
    Array [
      2020-01-05T21:00:00.000Z,
    ]
  }
  onChange={[MockFunction]}
  ranged={false}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c19 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today,active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c18"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          date={2019-12-31T21:00:00.000Z}
          disabledDates={
            Array [
              2020-01-05T21:00:00.000Z,
            ]
          }
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={false}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthSingleDays
                    data-marker="Body.content.MonthSingleDays"
                    date={2019-12-31T21:00:00.000Z}
                    disabledDates={
                      Array [
                        2020-01-05T21:00:00.000Z,
                      ]
                    }
                    displayedDate={2019-12-31T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      type={
                        Array [
                          "today",
                          "active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "today",
                            "active",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "today",
                              "active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthSingleDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c18",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c18"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange w/ maxDate 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c19 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_15"
  date={2019-12-31T21:00:00.000Z}
  defaultViewMode="month"
  maxDate={2020-01-04T21:00:00.000Z}
  onChange={[MockFunction]}
  ranged={false}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c19 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today,active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c18"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          date={2019-12-31T21:00:00.000Z}
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          maxDate={2020-01-04T21:00:00.000Z}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={false}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthSingleDays
                    data-marker="Body.content.MonthSingleDays"
                    date={2019-12-31T21:00:00.000Z}
                    displayedDate={2019-12-31T21:00:00.000Z}
                    maxDate={2020-01-04T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      type={
                        Array [
                          "today",
                          "active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "today",
                            "active",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "today",
                              "active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthSingleDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c18",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c18"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange w/ minDate 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c19 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c20 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c21 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_14"
  date={2019-12-31T21:00:00.000Z}
  defaultViewMode="month"
  minDate={2020-01-06T21:00:00.000Z}
  onChange={[MockFunction]}
  ranged={false}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c19 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c20 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c21 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c15 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="disabled,active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c18"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          date={2019-12-31T21:00:00.000Z}
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          minDate={2020-01-06T21:00:00.000Z}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={false}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthSingleDays
                    data-marker="Body.content.MonthSingleDays"
                    date={2019-12-31T21:00:00.000Z}
                    displayedDate={2019-12-31T21:00:00.000Z}
                    minDate={2020-01-06T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      type={
                        Array [
                          "disabled",
                          "active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                            "active",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                              "active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthSingleDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c18",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c18"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange w/ ranged 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c22 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c17 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c23 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c24 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c24 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c25 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c25 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c19 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c19 .c13 {
  background-color: #F4F4F4;
}

.c18 {
  position: absolute;
  height: 100%;
  width: 50%;
  top: 0;
  right: 0;
  background-color: #F4F4F4;
}

.c20 {
  position: absolute;
  height: 100%;
  width: 50%;
  top: 0;
  left: 0;
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_16"
  defaultViewMode="month"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          null,
          Object {
            "dateEnd": undefined,
            "dateStart": 2020-01-05T21:00:00.000Z,
          },
        ],
        Array [
          null,
          Object {
            "dateEnd": 2020-01-15T21:00:00.000Z,
            "dateStart": 2020-01-05T21:00:00.000Z,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ranged={true}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c22 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c17 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c23 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c24 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c24 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c25 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c25 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c19 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c19 .c13 {
  background-color: #F4F4F4;
}

.c18 {
  position: absolute;
  height: 100%;
  width: 50%;
  top: 0;
  right: 0;
  background-color: #F4F4F4;
}

.c20 {
  position: absolute;
  height: 100%;
  width: 50%;
  top: 0;
  left: 0;
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="active"
                >
                  <div
                    class="c18"
                    data-marker="monthDays.RangeSelectionStart"
                  />
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c19"
                  data-marker="monthDays.Day"
                  type="range"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="active"
                >
                  <div
                    class="c20"
                    data-marker="monthDays.RangeSelectionEnd"
                  />
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c21"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          dateEnd={2020-01-15T21:00:00.000Z}
          dateStart={2020-01-05T21:00:00.000Z}
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={true}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthRangeDays
                    data-marker="Body.content.MonthRangeDays"
                    date={
                      Object {
                        "end": 2020-01-15T21:00:00.000Z,
                        "start": 2020-01-05T21:00:00.000Z,
                      }
                    }
                    displayedDate={2019-12-31T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "today",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "today",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "today",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "active",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "active",
                            ]
                          }
                        >
                          <Calendarstyles__RangeSelectionStart
                            data-marker="monthDays.RangeSelectionStart"
                          >
                            <StyledComponent
                              data-marker="monthDays.RangeSelectionStart"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Calendarstyles__RangeSelectionStart-sc-178qlx0-3",
                                    "isStatic": false,
                                    "lastClassName": "c18",
                                    "rules": Array [
                                      "position:absolute;height:100%;width:50%;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__RangeSelectionStart",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Calendarstyles__RangeSelectionStart-sc-178qlx0-3",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c18"
                                data-marker="monthDays.RangeSelectionStart"
                              />
                            </StyledComponent>
                          </Calendarstyles__RangeSelectionStart>
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "range",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "range",
                          ]
                        }
                      >
                        <div
                          className="c19"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "range",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "active",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "active",
                            ]
                          }
                        >
                          <Calendarstyles__RangeSelectionEnd
                            data-marker="monthDays.RangeSelectionEnd"
                          >
                            <StyledComponent
                              data-marker="monthDays.RangeSelectionEnd"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Calendarstyles__RangeSelectionEnd-sc-178qlx0-4",
                                    "isStatic": false,
                                    "lastClassName": "c20",
                                    "rules": Array [
                                      "position:absolute;height:100%;width:50%;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__RangeSelectionEnd",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Calendarstyles__RangeSelectionEnd-sc-178qlx0-4",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c20"
                                data-marker="monthDays.RangeSelectionEnd"
                              />
                            </StyledComponent>
                          </Calendarstyles__RangeSelectionEnd>
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthRangeDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c21",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c21"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange w/ ranged on disabled day 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c22 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_18"
  defaultViewMode="month"
  disabledDates={
    Array [
      2020-01-05T21:00:00.000Z,
    ]
  }
  onChange={[MockFunction]}
  ranged={true}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c22 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c18"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          disabledDates={
            Array [
              2020-01-05T21:00:00.000Z,
            ]
          }
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={true}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthRangeDays
                    data-marker="Body.content.MonthRangeDays"
                    date={
                      Object {
                        "end": undefined,
                        "start": undefined,
                      }
                    }
                    disabledDates={
                      Array [
                        2020-01-05T21:00:00.000Z,
                      ]
                    }
                    displayedDate={2019-12-31T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "today",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "today",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "today",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthRangeDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c18",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c18"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange w/ ranged w/ maxDate 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c22 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_20"
  defaultViewMode="month"
  maxDate={2020-01-04T21:00:00.000Z}
  onChange={[MockFunction]}
  ranged={true}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c17 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c22 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c18"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          maxDate={2020-01-04T21:00:00.000Z}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={true}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthRangeDays
                    data-marker="Body.content.MonthRangeDays"
                    date={
                      Object {
                        "end": undefined,
                        "start": undefined,
                      }
                    }
                    displayedDate={2019-12-31T21:00:00.000Z}
                    maxDate={2020-01-04T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "today",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "today",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "today",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthRangeDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c18",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c18"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange w/ ranged w/ minDate 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c18 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c18 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c22 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_19"
  defaultViewMode="month"
  minDate={2020-01-06T21:00:00.000Z}
  onChange={[MockFunction]}
  ranged={true}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c18 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c18 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c19 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c19 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c20 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c21 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c22 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="disabled"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c17"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          minDate={2020-01-06T21:00:00.000Z}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={true}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthRangeDays
                    data-marker="Body.content.MonthRangeDays"
                    date={
                      Object {
                        "end": undefined,
                        "start": undefined,
                      }
                    }
                    displayedDate={2019-12-31T21:00:00.000Z}
                    minDate={2020-01-06T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "disabled",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "disabled",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "disabled",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthRangeDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c17",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c17"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ onChange w/ ranged where dateStart = dateEnd 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c20 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c17 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c21 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c22 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c23 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c24 .c13 {
  background-color: #F4F4F4;
}

.c18 {
  position: absolute;
  height: 100%;
  width: 50%;
  top: 0;
  right: 0;
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<Calendar
  data-marker="Calendar_17"
  defaultViewMode="month"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          null,
          Object {
            "dateEnd": undefined,
            "dateStart": 2020-01-05T21:00:00.000Z,
          },
        ],
        Array [
          null,
          Object {
            "dateEnd": 2020-01-05T21:00:00.000Z,
            "dateStart": 2020-01-05T21:00:00.000Z,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ranged={true}
  todayButton={true}
>
  <Calendarstyles__Box
    data-marker="Calendar.Box"
  >
    <StyledComponent
      data-marker="Calendar.Box"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Calendarstyles__Box-sc-178qlx0-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display:inline-block;box-sizing:border-box;",
              [Function],
            ],
          },
          "displayName": "Calendarstyles__Box",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Calendarstyles__Box-sc-178qlx0-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": .c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c14 {
  position: absolute;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  font-size: 12px;
  cursor: pointer;
  color: #2B2D33;
}

.c12 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c12 .c13 {
  color: #AAABAD;
  pointer-events: none;
  cursor: default;
}

.c12 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c15 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c15 .c13 {
  font-weight: 700;
  color: #00A5BC;
}

.c15 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c16 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c16 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c20 .c13 {
  font-weight: 700;
  color: #00A5BC;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c20 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c17 {
  width: 32px;
  height: 32px;
  position: relative;
}

.c17 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c17 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c21 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
}

.c21 .c13:hover {
  background-color: #F4F4F4;
  border-radius: 4px;
}

.c22 .c13 {
  color: rgba(43,45,51,0.24);
  cursor: default;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c22 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c23 .c13 {
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
  background-color: #FEE600;
  border-radius: 4px;
  color: #2B2D33;
}

.c23 .c13:hover {
  background-color: #FEE600;
  border-radius: 4px;
}

.c24 .c13 {
  background-color: #F4F4F4;
}

.c18 {
  position: absolute;
  height: 100%;
  width: 50%;
  top: 0;
  right: 0;
  background-color: #F4F4F4;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
            class="c0"
            data-marker="Calendar.Box"
          >
            <div
              class="c1"
              data-marker="Header.content.Box_1"
            >
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow"
              >
                <svg
                  data-marker="Header.content.RewindLeft2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindLeft2.defs"
                  />
                  <path
                    d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                    data-marker="RewindLeft2.path"
                  />
                </svg>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_3"
              >
                <svg
                  data-marker="Header.content.Left_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Left.defs"
                  />
                  <path
                    d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                    data-marker="Left.path"
                  />
                </svg>
              </div>
              <div
                class="c5"
                data-marker="Header.content.HeaderTitle_1"
              >
                <div
                  class="c6"
                  data-marker="Header.content.MonthName"
                >
                  <button
                    class="c7"
                    data-marker="Header.content.Button_0"
                    type="button"
                  >
                    <span
                      class="c8"
                      data-marker="ButtonComponent.content.ContentWrapper"
                    >
                      <div
                        class="c9"
                        data-marker="Header.content.FirstLetterUpper"
                      >
                        январь
                      </div>
                    </span>
                  </button>
                </div>
                <button
                  class="c7"
                  data-marker="Header.content.Button_1"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Header.content.b_0"
                    >
                      2020
                    </b>
                  </span>
                </button>
              </div>
              <div
                class="c4"
                data-marker="Header.content.NavigationButton_4"
              >
                <svg
                  data-marker="Header.content.Right_1"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="Right.defs"
                  />
                  <path
                    d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                    data-marker="Right.path"
                  />
                </svg>
              </div>
              <div
                class="c2 c3"
                data-marker="Header.content.HeaderDoubleArrow_0"
              >
                <svg
                  data-marker="Header.content.RewindRight2"
                  fill="currentColor"
                  height="16"
                  viewBox="0 0 24 24"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <defs
                    data-marker="RewindRight2.defs"
                  />
                  <path
                    d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                    data-marker="RewindRight2.path"
                  />
                </svg>
              </div>
            </div>
            <div
              data-marker="Body.content.div_1"
            >
              <div
                class="c10"
                data-marker="Body.content.Box_1"
              >
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПН
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СР
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ЧТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ПТ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  СБ
                </div>
                <div
                  class="c11"
                  data-marker="daysWeek.WeekDay"
                >
                  ВС
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
                <div
                  class="c15"
                  data-marker="monthDays.Day"
                  type="today"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    1
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    2
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    3
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    4
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    5
                  </div>
                </div>
                <div
                  class="c17"
                  data-marker="monthDays.Day"
                  type="active"
                >
                  <div
                    class="c18"
                    data-marker="monthDays.RangeSelectionStart"
                  />
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    6
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    7
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    8
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    9
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    10
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    11
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    12
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    13
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    14
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    15
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    16
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    17
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    18
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    19
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    20
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    21
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    22
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    23
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    24
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    25
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    26
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    27
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    28
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    29
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    30
                  </div>
                </div>
                <div
                  class="c16"
                  data-marker="monthDays.Day"
                  type=""
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  >
                    31
                  </div>
                </div>
                <div
                  class="c12"
                  data-marker="monthDays.Day"
                  type="not-active"
                >
                  <div
                    class="c13 c14"
                    data-marker="monthDays.DayState"
                  />
                </div>
              </div>
              <div
                class="c19"
                data-marker="Body.content.Footer"
              >
                <button
                  class="c7"
                  data-marker="Body.content.Button"
                  type="button"
                >
                  <span
                    class="c8"
                    data-marker="ButtonComponent.content.ContentWrapper"
                  >
                    <b
                      data-marker="Body.content.b"
                    >
                      Сегодня
                    </b>
                  </span>
                </button>
              </div>
            </div>
          </div>,
        }
      }
    >
      <div
        className="c0"
        data-marker="Calendar.Box"
      >
        <Header
          data-marker="Calendar.Header"
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDisplayedDate={[Function]}
          onChangeViewMode={[Function]}
          viewMode="month"
        >
          <Headerstyle__Box
            data-marker="Header.content.Box_1"
          >
            <StyledComponent
              data-marker="Header.content.Box_1"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Headerstyle__Box-sc-9gq2xw-2",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "position:relative;display:flex;justify-content:center;align-items:center;user-select:none;",
                      [Function],
                      " & > ",
                      ".c2",
                      ":last-child{",
                      [Function],
                      "}",
                    ],
                  },
                  "displayName": "Headerstyle__Box",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Headerstyle__Box-sc-9gq2xw-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
                data-marker="Header.content.Box_1"
              >
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow"
                    >
                      <RewindLeft2
                        color="currentColor"
                        data-marker="Header.content.RewindLeft2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindLeft2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindLeft2.defs"
                          />
                          <path
                            d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
                            data-marker="RewindLeft2.path"
                          />
                        </svg>
                      </RewindLeft2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_3"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_3"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_3"
                    >
                      <Left
                        color="currentColor"
                        data-marker="Header.content.Left_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Left_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Left.defs"
                          />
                          <path
                            d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
                            data-marker="Left.path"
                          />
                        </svg>
                      </Left>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderTitle
                  data-marker="Header.content.HeaderTitle_1"
                  hasPadding={true}
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderTitle_1"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                          "isStatic": false,
                          "lastClassName": "c5",
                          "rules": Array [
                            "display:inline-flex;align-items:center;justify-content:center;box-sizing:content-box;",
                            [Function],
                          ],
                        },
                        "displayName": "Headerstyle__HeaderTitle",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__HeaderTitle-sc-9gq2xw-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    hasPadding={true}
                  >
                    <div
                      className="c5"
                      data-marker="Header.content.HeaderTitle_1"
                    >
                      <Headerstyle__MonthName
                        data-marker="Header.content.MonthName"
                      >
                        <StyledComponent
                          data-marker="Header.content.MonthName"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                                "isStatic": false,
                                "lastClassName": "c6",
                                "rules": Array [
                                  "margin-right:3px;",
                                ],
                              },
                              "displayName": "Headerstyle__MonthName",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Headerstyle__MonthName-sc-9gq2xw-5",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            data-marker="Header.content.MonthName"
                          >
                            <Button
                              data-marker="Header.content.Button_0"
                              design="ghost"
                              onClick={[Function]}
                              size="m"
                              type="button"
                            >
                              <ButtonComponent
                                data-marker="Header.content.Button_0"
                                design="ghost"
                                isFocusStateVisible={false}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__Box
                                  as="button"
                                  data-marker="Header.content.Button_0"
                                  design="ghost"
                                  isFocusStateVisible={false}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  size="m"
                                  type="button"
                                >
                                  <StyledComponent
                                    as="button"
                                    data-marker="Header.content.Button_0"
                                    design="ghost"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__Box-vmym2s-0",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " &:active{top:1px;}&:hover{",
                                            [Function],
                                            "}",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__Box",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                        "target": "button",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    isFocusStateVisible={false}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    size="m"
                                    type="button"
                                  >
                                    <button
                                      className="c7"
                                      data-marker="Header.content.Button_0"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                      size="m"
                                      type="button"
                                    >
                                      <Buttonstyles__ContentWrapper
                                        data-marker="ButtonComponent.content.ContentWrapper"
                                        key=".0"
                                        size="m"
                                      >
                                        <StyledComponent
                                          data-marker="ButtonComponent.content.ContentWrapper"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                                "isStatic": false,
                                                "lastClassName": "c8",
                                                "rules": Array [
                                                  "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                                  [Function],
                                                  "}& > svg{display:block;}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Buttonstyles__ContentWrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="m"
                                        >
                                          <span
                                            className="c8"
                                            data-marker="ButtonComponent.content.ContentWrapper"
                                            size="m"
                                          >
                                            <Calendarstyles__FirstLetterUpper
                                              data-marker="Header.content.FirstLetterUpper"
                                            >
                                              <StyledComponent
                                                data-marker="Header.content.FirstLetterUpper"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "font-weight:bold;&:first-letter{text-transform:uppercase;}",
                                                      ],
                                                    },
                                                    "displayName": "Calendarstyles__FirstLetterUpper",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Calendarstyles__FirstLetterUpper-sc-178qlx0-6",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  data-marker="Header.content.FirstLetterUpper"
                                                >
                                                  январь
                                                </div>
                                              </StyledComponent>
                                            </Calendarstyles__FirstLetterUpper>
                                          </span>
                                        </StyledComponent>
                                      </Buttonstyles__ContentWrapper>
                                    </button>
                                  </StyledComponent>
                                </Buttonstyles__Box>
                              </ButtonComponent>
                            </Button>
                          </div>
                        </StyledComponent>
                      </Headerstyle__MonthName>
                      <Button
                        data-marker="Header.content.Button_1"
                        design="ghost"
                        onClick={[Function]}
                        size="m"
                        type="button"
                      >
                        <ButtonComponent
                          data-marker="Header.content.Button_1"
                          design="ghost"
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <Buttonstyles__Box
                            as="button"
                            data-marker="Header.content.Button_1"
                            design="ghost"
                            isFocusStateVisible={false}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <StyledComponent
                              as="button"
                              data-marker="Header.content.Button_1"
                              design="ghost"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Buttonstyles__Box-vmym2s-0",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " &:active{top:1px;}&:hover{",
                                      [Function],
                                      "}",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                      " ",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Buttonstyles__Box",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              isFocusStateVisible={false}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseUp={[Function]}
                              size="m"
                              type="button"
                            >
                              <button
                                className="c7"
                                data-marker="Header.content.Button_1"
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                onMouseUp={[Function]}
                                size="m"
                                type="button"
                              >
                                <Buttonstyles__ContentWrapper
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  key=".0"
                                  size="m"
                                >
                                  <StyledComponent
                                    data-marker="ButtonComponent.content.ContentWrapper"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                          "isStatic": false,
                                          "lastClassName": "c8",
                                          "rules": Array [
                                            "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                            [Function],
                                            "}& > svg{display:block;}",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Buttonstyles__ContentWrapper",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="m"
                                  >
                                    <span
                                      className="c8"
                                      data-marker="ButtonComponent.content.ContentWrapper"
                                      size="m"
                                    >
                                      <b
                                        data-marker="Header.content.b_0"
                                      >
                                        2020
                                      </b>
                                    </span>
                                  </StyledComponent>
                                </Buttonstyles__ContentWrapper>
                              </button>
                            </StyledComponent>
                          </Buttonstyles__Box>
                        </ButtonComponent>
                      </Button>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderTitle>
                <Headerstyle__NavigationButton
                  data-marker="Header.content.NavigationButton_4"
                >
                  <StyledComponent
                    data-marker="Header.content.NavigationButton_4"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            "display:flex;",
                            [Function],
                            " &:hover{",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__NavigationButton",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Headerstyle__NavigationButton-sc-9gq2xw-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c4"
                      data-marker="Header.content.NavigationButton_4"
                    >
                      <Right
                        color="currentColor"
                        data-marker="Header.content.Right_1"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.Right_1"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="Right.defs"
                          />
                          <path
                            d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
                            data-marker="Right.path"
                          />
                        </svg>
                      </Right>
                    </div>
                  </StyledComponent>
                </Headerstyle__NavigationButton>
                <Headerstyle__HeaderDoubleArrow
                  data-marker="Header.content.HeaderDoubleArrow_0"
                >
                  <StyledComponent
                    data-marker="Header.content.HeaderDoubleArrow_0"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "c2",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "display:flex;align-items:flex-end;",
                            [Function],
                            " ",
                            [Function],
                            " &:hover{",
                            [Function],
                            " ",
                            [Function],
                            "}",
                          ],
                        },
                        "displayName": "Headerstyle__HeaderDoubleArrow",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "c2",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2 c3"
                      data-marker="Header.content.HeaderDoubleArrow_0"
                    >
                      <RewindRight2
                        color="currentColor"
                        data-marker="Header.content.RewindRight2"
                        onClick={[Function]}
                        size="s"
                      >
                        <svg
                          data-marker="Header.content.RewindRight2"
                          fill="currentColor"
                          height={16}
                          onClick={[Function]}
                          viewBox="0 0 24 24"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <defs
                            data-marker="RewindRight2.defs"
                          />
                          <path
                            d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
                            data-marker="RewindRight2.path"
                          />
                        </svg>
                      </RewindRight2>
                    </div>
                  </StyledComponent>
                </Headerstyle__HeaderDoubleArrow>
              </div>
            </StyledComponent>
          </Headerstyle__Box>
        </Header>
        <Body
          data-marker="Calendar.Body"
          dateEnd={2020-01-05T21:00:00.000Z}
          dateStart={2020-01-05T21:00:00.000Z}
          displayedDate={2019-12-31T21:00:00.000Z}
          hasNavigation={true}
          onChangeDate={[Function]}
          onChangeMonth={[Function]}
          onGoToMonth={[Function]}
          onGoToToday={[Function]}
          ranged={true}
          todayButton={true}
          viewMode="month"
        >
          <div
            data-marker="Body.content.div_1"
          >
            <Bodystyle__Box
              data-marker="Body.content.Box_1"
            >
              <StyledComponent
                data-marker="Body.content.Box_1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Box-sc-4pw16a-0",
                      "isStatic": false,
                      "lastClassName": "c10",
                      "rules": Array [
                        "box-sizing:border-box;width:",
                        "256",
                        "px;display:flex;flex-wrap:wrap;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Box",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Box-sc-4pw16a-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c10"
                  data-marker="Body.content.Box_1"
                >
                  <MonthRangeDays
                    data-marker="Body.content.MonthRangeDays"
                    date={
                      Object {
                        "end": 2020-01-05T21:00:00.000Z,
                        "start": 2020-01-05T21:00:00.000Z,
                      }
                    }
                    displayedDate={2019-12-31T21:00:00.000Z}
                    onChangeDate={[Function]}
                  >
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="0"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПН
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="1"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="2"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СР
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="3"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ЧТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="4"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ПТ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="5"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          СБ
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__WeekDay
                      data-marker="daysWeek.WeekDay"
                      key="6"
                    >
                      <StyledComponent
                        data-marker="daysWeek.WeekDay"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                              "isStatic": false,
                              "lastClassName": "c11",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;display:flex;align-items:center;justify-content:center;",
                                [Function],
                              ],
                            },
                            "displayName": "Calendarstyles__WeekDay",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__WeekDay-sc-178qlx0-5",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c11"
                          data-marker="daysWeek.WeekDay"
                        >
                          ВС
                        </div>
                      </StyledComponent>
                    </Calendarstyles__WeekDay>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="0"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="1"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="2"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "today",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "today",
                          ]
                        }
                      >
                        <div
                          className="c15"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "today",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                1
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="3"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                2
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="4"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                3
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="5"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                4
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="6"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                5
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="7"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "active",
                          ]
                        }
                      >
                        <div
                          className="c17"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "active",
                            ]
                          }
                        >
                          <Calendarstyles__RangeSelectionStart
                            data-marker="monthDays.RangeSelectionStart"
                          >
                            <StyledComponent
                              data-marker="monthDays.RangeSelectionStart"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Calendarstyles__RangeSelectionStart-sc-178qlx0-3",
                                    "isStatic": false,
                                    "lastClassName": "c18",
                                    "rules": Array [
                                      "position:absolute;height:100%;width:50%;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__RangeSelectionStart",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Calendarstyles__RangeSelectionStart-sc-178qlx0-3",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c18"
                                data-marker="monthDays.RangeSelectionStart"
                              />
                            </StyledComponent>
                          </Calendarstyles__RangeSelectionStart>
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                6
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="8"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                7
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="9"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                8
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="10"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                9
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="11"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                10
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="12"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                11
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="13"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                12
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="14"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                13
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="15"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                14
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="16"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                15
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="17"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                16
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="18"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                17
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="19"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                18
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="20"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                19
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="21"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                20
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="22"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                21
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="23"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                22
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="24"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                23
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="25"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                24
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="26"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                25
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="27"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                26
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="28"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                27
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="29"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                28
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="30"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                29
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="31"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                30
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="32"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={Array []}
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={Array []}
                      >
                        <div
                          className="c16"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={Array []}
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              >
                                31
                              </div>
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                    <Calendarstyles__Day
                      data-marker="monthDays.Day"
                      key="33"
                      onClick={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      type={
                        Array [
                          "not-active",
                        ]
                      }
                    >
                      <StyledComponent
                        data-marker="monthDays.Day"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Calendarstyles__Day-sc-178qlx0-2",
                              "isStatic": false,
                              "lastClassName": "c12",
                              "rules": Array [
                                "width:",
                                "32",
                                "px;height:",
                                "32",
                                "px;position:relative;",
                                ".c13",
                                "{",
                                [Function],
                                " ",
                                [Function],
                                " &:hover{",
                                [Function],
                                "}}}",
                              ],
                            },
                            "displayName": "Calendarstyles__Day",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Calendarstyles__Day-sc-178qlx0-2",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={
                          Object {
                            "current": <div
                              class="c12"
                              data-marker="monthDays.Day"
                              type="not-active"
                            >
                              <div
                                class="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </div>,
                          }
                        }
                        onClick={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type={
                          Array [
                            "not-active",
                          ]
                        }
                      >
                        <div
                          className="c12"
                          data-marker="monthDays.Day"
                          onClick={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                          type={
                            Array [
                              "not-active",
                            ]
                          }
                        >
                          <Calendarstyles__DayState
                            data-marker="monthDays.DayState"
                          >
                            <StyledComponent
                              data-marker="monthDays.DayState"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c13",
                                    "isStatic": false,
                                    "lastClassName": "c14",
                                    "rules": Array [
                                      "position:absolute;display:flex;align-items:center;justify-content:center;width:100%;height:100%;top:0;left:0;",
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Calendarstyles__DayState",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c13",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c13 c14"
                                data-marker="monthDays.DayState"
                              />
                            </StyledComponent>
                          </Calendarstyles__DayState>
                        </div>
                      </StyledComponent>
                    </Calendarstyles__Day>
                  </MonthRangeDays>
                </div>
              </StyledComponent>
            </Bodystyle__Box>
            <Bodystyle__Footer
              data-marker="Body.content.Footer"
            >
              <StyledComponent
                data-marker="Body.content.Footer"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Bodystyle__Footer-sc-4pw16a-1",
                      "isStatic": false,
                      "lastClassName": "c19",
                      "rules": Array [
                        "display:flex;align-items:center;justify-content:center;",
                        [Function],
                      ],
                    },
                    "displayName": "Bodystyle__Footer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Bodystyle__Footer-sc-4pw16a-1",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c19"
                  data-marker="Body.content.Footer"
                >
                  <Button
                    data-marker="Body.content.Button"
                    design="ghost"
                    onClick={[Function]}
                    size="m"
                    type="button"
                  >
                    <ButtonComponent
                      data-marker="Body.content.Button"
                      design="ghost"
                      isFocusStateVisible={false}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      size="m"
                      type="button"
                    >
                      <Buttonstyles__Box
                        as="button"
                        data-marker="Body.content.Button"
                        design="ghost"
                        isFocusStateVisible={false}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        onMouseUp={[Function]}
                        size="m"
                        type="button"
                      >
                        <StyledComponent
                          as="button"
                          data-marker="Body.content.Button"
                          design="ghost"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Buttonstyles__Box-vmym2s-0",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;appearance:none;cursor:pointer;outline:0;position:relative;",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " &:active{top:1px;}&:hover{",
                                  [Function],
                                  "}",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Buttonstyles__Box",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Buttonstyles__Box-vmym2s-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isFocusStateVisible={false}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          size="m"
                          type="button"
                        >
                          <button
                            className="c7"
                            data-marker="Body.content.Button"
                            onClick={[Function]}
                            onFocus={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            size="m"
                            type="button"
                          >
                            <Buttonstyles__ContentWrapper
                              data-marker="ButtonComponent.content.ContentWrapper"
                              key=".0"
                              size="m"
                            >
                              <StyledComponent
                                data-marker="ButtonComponent.content.ContentWrapper"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                      "isStatic": false,
                                      "lastClassName": "c8",
                                      "rules": Array [
                                        "display:inline-block;vertical-align:top;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;&:not(:last-of-type){",
                                        [Function],
                                        "}& > svg{display:block;}",
                                        [Function],
                                      ],
                                    },
                                    "displayName": "Buttonstyles__ContentWrapper",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Buttonstyles__ContentWrapper-vmym2s-1",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                size="m"
                              >
                                <span
                                  className="c8"
                                  data-marker="ButtonComponent.content.ContentWrapper"
                                  size="m"
                                >
                                  <b
                                    data-marker="Body.content.b"
                                  >
                                    Сегодня
                                  </b>
                                </span>
                              </StyledComponent>
                            </Buttonstyles__ContentWrapper>
                          </button>
                        </StyledComponent>
                      </Buttonstyles__Box>
                    </ButtonComponent>
                  </Button>
                </div>
              </StyledComponent>
            </Bodystyle__Footer>
          </div>
        </Body>
      </div>
    </StyledComponent>
  </Calendarstyles__Box>
</Calendar>
`;

exports[`Calendar w/ ranged date 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ weekendDates custom 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar w/ weekendDates weekends 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-top: 1px solid #E9EAEA;
  height: 48px;
  width: 100%;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
    <div
      class="c12"
      data-marker="Body.content.Footer"
    >
      <button
        class="c7"
        data-marker="Body.content.Button"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Body.content.b"
          >
            Сегодня
          </b>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`Calendar wo/ todayButton 1`] = `
.c0 {
  display: inline-block;
  box-sizing: border-box;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  background-color: #FFFFFF;
  border-radius: 8px;
}

.c11 {
  width: 32px;
  height: 32px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 12px;
  color: #AAABAD;
}

.c9 {
  font-weight: bold;
}

.c9:first-letter {
  text-transform: uppercase;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  margin-right: 8px;
  color: #808185;
  cursor: pointer;
}

.c3:hover {
  color: #2B2D33;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #808185;
  cursor: pointer;
}

.c4:hover {
  color: #2B2D33;
}

.c1 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #E9EAEA;
}

.c1 > .c2:last-child {
  margin-left: 8px;
  margin-right: 0;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: content-box;
  font-size: 14px;
  width: 130px;
  line-height: 20px;
}

.c6 {
  margin-right: 3px;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: 0;
  position: relative;
  border-radius: 8px;
  border-color: transparent;
  font-family: 'ALS Hauss',Helvetica,'Helvetica New',Arial,sans-serif;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  transition: background-color 0.3s ease,color 0.3s ease,border-color 0.3s ease;
  font-size: 14px;
  line-height: 22px;
  padding: 0 20px;
  height: 36px;
  min-width: 36px;
  color: #2B2D33;
  background-color: transparent;
  padding: 0;
}

.c7:active {
  top: 1px;
}

.c7:hover {
  color: #00809C;
}

.c8 {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:not(:last-of-type) {
  margin-right: 8px;
}

.c8 > svg {
  display: block;
}

.c10 {
  box-sizing: border-box;
  width: 256px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 16px;
}

<div
  class="c0"
  data-marker="Calendar.Box"
>
  <div
    class="c1"
    data-marker="Header.content.Box_1"
  >
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow"
    >
      <svg
        data-marker="Header.content.RewindLeft2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindLeft2.defs"
        />
        <path
          d="M15 3v1.414L7.415 12 15 19.586V21h-1.414l-9-9 9-9H15zm5.999 0v1.414L13.414 12l7.585 7.586V21h-1.413l-9-9 9-9h1.413z"
          data-marker="RewindLeft2.path"
        />
      </svg>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_3"
    >
      <svg
        data-marker="Header.content.Left_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Left.defs"
        />
        <path
          d="M17 21v-1.414L9.414 12 17 4.414V3h-1.414l-9 9 9 9z"
          data-marker="Left.path"
        />
      </svg>
    </div>
    <div
      class="c5"
      data-marker="Header.content.HeaderTitle_1"
    >
      <div
        class="c6"
        data-marker="Header.content.MonthName"
      >
        <button
          class="c7"
          data-marker="Header.content.Button_0"
          type="button"
        >
          <span
            class="c8"
            data-marker="ButtonComponent.content.ContentWrapper"
          >
            <div
              class="c9"
              data-marker="Header.content.FirstLetterUpper"
            >
              январь
            </div>
          </span>
        </button>
      </div>
      <button
        class="c7"
        data-marker="Header.content.Button_1"
        type="button"
      >
        <span
          class="c8"
          data-marker="ButtonComponent.content.ContentWrapper"
        >
          <b
            data-marker="Header.content.b_0"
          >
            2020
          </b>
        </span>
      </button>
    </div>
    <div
      class="c4"
      data-marker="Header.content.NavigationButton_4"
    >
      <svg
        data-marker="Header.content.Right_1"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="Right.defs"
        />
        <path
          d="M9.414 3H7.999v1.414L15.585 12l-7.586 7.586V21h1.415l9-9z"
          data-marker="Right.path"
        />
      </svg>
    </div>
    <div
      class="c2 c3"
      data-marker="Header.content.HeaderDoubleArrow_0"
    >
      <svg
        data-marker="Header.content.RewindRight2"
        fill="currentColor"
        height="16"
        viewBox="0 0 24 24"
        width="16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <defs
          data-marker="RewindRight2.defs"
        />
        <path
          d="M10 4.414V3h1.414l9 9-9 9H10v-1.414L17.585 12 10 4.414zm-6 0V3h1.414l9 9-9 9H4v-1.414L11.586 12 4 4.414z"
          data-marker="RewindRight2.path"
        />
      </svg>
    </div>
  </div>
  <div
    data-marker="Body.content.div_1"
  >
    <div
      class="c10"
      data-marker="Body.content.Box_1"
    >
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПН
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СР
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ЧТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ПТ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        СБ
      </div>
      <div
        class="c11"
        data-marker="daysWeek.WeekDay"
      >
        ВС
      </div>
    </div>
  </div>
</div>
`;
