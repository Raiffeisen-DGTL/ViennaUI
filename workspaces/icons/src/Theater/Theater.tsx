import React, { SVGAttributes } from 'react';

export interface TheaterProps extends SVGAttributes<SVGElement> {
    [key: string]: any;
    size?: 'xs' | 's' | 'm' | 'l' | 'xl' | number;
    color?: string;
}

const sizes = { xs: 12, s: 16, m: 20, l: 24, xl: 32 };
export const Theater: React.FC<TheaterProps> = (props): JSX.Element => {
    const { color = 'currentColor', size = 'm', ...attrs } = props;
    const d = sizes[size] || size;

    return (
        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width={d} height={d} fill={color} {...attrs}>
            <defs />
            <path d='M7 12a1 1 0 110 2 1 1 0 010-2zm3 1a1 1 0 102 0 1 1 0 00-2 0zm-4 3l-.447.895h.003l.005.004.02.01a15.592 15.592 0 00.328.155c.214.099.512.231.845.364.33.133.708.27 1.08.377.358.102.776.195 1.166.195.39 0 .808-.093 1.165-.195.373-.106.75-.244 1.081-.377a17.94 17.94 0 001.173-.52l.02-.01.005-.002.003-.002L12 16l-.447-.894-.003.001-.014.007-.059.028a16.036 16.036 0 01-.974.43c-.294.117-.603.23-.887.31-.3.086-.506.118-.616.118-.11 0-.317-.032-.616-.118a9.482 9.482 0 01-.888-.31 16.023 16.023 0 01-.973-.43l-.059-.028-.014-.007-.003-.002L6 16zm11-8a1 1 0 110-2 1 1 0 010 2z' />
            <path
                fillRule='evenodd'
                d='M8 3a1 1 0 011-1h12a1 1 0 011 1v7c0 1.713-.57 3.459-1.753 4.79-1.064 1.197-2.585 2.011-4.503 2.178a6.909 6.909 0 01-1.497 2.821C13.048 21.14 11.271 22 9 22s-4.048-.862-5.247-2.21C2.57 18.458 2 16.712 2 15V9a1 1 0 011-1h5V3zm-4 7v5c0 1.287.43 2.541 1.247 3.46C6.048 19.363 7.271 20 9 20s2.952-.638 3.753-1.54c.402-.452.71-.986.92-1.564A5.582 5.582 0 0014 15v-5H4zm12 4.923V12.24c.168.058.338.122.504.188a16.036 16.036 0 01.973.43l.059.028.014.007.003.002L18 12l.447-.895h-.003l-.005-.004-.02-.01-.03-.014-.042-.02a16.71 16.71 0 00-1.1-.486A11.446 11.446 0 0016 10.15V9a1 1 0 00-1-1h-2a1 1 0 100-2 1 1 0 000 2h-3V4h10v6c0 1.287-.43 2.541-1.247 3.46-.637.717-1.54 1.267-2.753 1.463z'
                clipRule='evenodd'
            />
        </svg>
    );
};

Theater.defaultProps = {
    size: 'm',
    color: 'currentColor',
};

Theater.displayName = 'Theater';
export default Theater;
